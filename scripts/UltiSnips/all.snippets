# Header
snippet "import|include" "import:import|include" br
<MISSING import|include>
endsnippet
snippet header "header:header" b
<MISSING header>
endsnippet

# Logical operations
snippet " \|\|| or" "or:or" r
<MISSING or|||>
endsnippet
snippet " &&| and" "and:and" r
<MISSING and|&&>
endsnippet
snippet "!([a-zA-Z0-9.,\-]+)| not" "not:not" r
<MISSING !|not>
endsnippet

# Conditional snippets
snippet if "if:if" b
<MISSING if>
endsnippet
snippet "ifsh?o?r?t?" "if shorthand:ifshort" r
	<MISSING ifshort>
endsnippet
snippet "ifel?s?e?" "if else:ifelse" br
<MISSING ifelse>
endsnippet
snippet "elif|(else if|elseif)" "else if:elif|elseif" br
<MISSING elif>
endsnippet
snippet else "else:else" b
<MISSING else>
endsnippet
snippet switch "switch:switch" b
<MISSING switch>
endsnippet
snippet case "case:case" b
<MISSING case>
endsnippet
	
# Loop snippets
snippet for "for:for" b
<MISSING for>
endsnippet
snippet "for((?!e)\w+)" "for,??? as variable:for???" br
<MISSING for var>
endsnippet
snippet "forea?c?h?" "for each element in collection:foreach" br
<MISSING foreach>
endsnippet
snippet while "while:while" b
<MISSING white>
endsnippet
snippet do "do while:do" b
<MISSING do>
endsnippet

# Methods/functinos
snippet "func?t?i?o?n?|meth?o?d?" "function:function|method" br
<MISSING func|method>
endsnippet
snippet "(\w+)(func?t?i?o?n?|meth?o?d?)" "function with type as match.group(1)" br
<MISSING var func|method>
endsnippet
snippet "const?r?u?c?t?o?r?" "constructor:constructor" br
<MISSING constructor>
endsnippet

# String snippets
snippet "[sS]tri?n?g?" "string variable:string|String" br
<MISSING string var>
endsnippet
snippet " contains| in" "string contains/is in another string:contains|in" r
<MISSING contains|in>
endsnippet
snippet "[tT]o[sS]tring\(?\)?" "to string:tostring|ToString|toString" br
<MISSING ToString>
endsnippet

# int snippets
snippet "[iI]nt" "int variable:int|Int" br
<MISSING int var>
endsnippet
snippet "(\w+)\+\+" "increment:???++" r
<MISSING ++>
endsnippet
snippet "(\w+)\-\-" "decrement:???--" r
<MISSING -->
endsnippet

# Variable snippets
snippet "[dD]ouble" "double variable:double|Double" br
<MISSING double var>
endsnippet
snippet "[fF]loat" "float variable:float|Float" br
<MISSING float var>
endsnippet
snippet "[bB]ool" "bool variable:bool|Bool" br
<MISSING bool var>
endsnippet

# Datatype snippets
snippet enum "enum:enum" b
<MISSING enum>
endsnippet
snippet "[lL]ist" "list:list|List" br
<MISSING list>
endsnippet
snippet "(\w+) ?[lL]ist" "list of type ???:??? list|??? List" br
<MISSING list with type>
endsnippet

# Documentation snippets
snippet "\"|#|//" "comment" br
<MISSING comment>
endsnippet
snippet "(m(ulti)?l(ine)?c(omment)?)|'''|/\*" " A comment spanning multiple lines:mlc|multilinecomment" br
<MISSING multiline comment>
endsnippet
snippet comment "comment:comment" b
<MISSING documentation>
endsnippet

# Special snippets
snippet sleep "Sleep program:sleep" b
<MISSING sleep>
endsnippet
snippet time "current time in milliseconds:time" b
<MISSING time>
endsnippet
snippet "kill" "kill current script:kill" br
<MISSING kill>
endsnippet
snippet print "print:print" b
<MISSING print>
endsnippet
snippet "printva?r?" "print a variable:printvar" r
<MISSING print var>
endsnippet
snippet "printli?s?t?" "print a list:printlist" r
<MISSING print list>
endsnippet

# New code snippets
snippet filebase "runnable script:file" b
<MISSING main>
endsnippet
snippet class "new class:class" b
<MISSING class>
endsnippet
# Stream snippets
snippet streamopen "Open a stream:streamopen" b
<MISSING streamopen>
endsnippet
snippet streamclose "Close a stream:streamopen" b
<MISSING streamclose>
endsnippet
snippet streamread "Read from a stream:streamread" b
<MISSING streamread>
endsnippet
snippet streamreadline "Read a line from a stream:streamreadline" b
<MISSING streamreadline>
endsnippet
snippet streamwrite "write to a stream:streamwrite" b
<MISSING streamwrite>
endsnippet

